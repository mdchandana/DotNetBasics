// <auto-generated />
using System;
using JqueryAjaxJson.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JqueryAjaxJson.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JqueryAjaxJson.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeePositionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePositionId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Matara",
                            EmployeePositionId = 1,
                            Name = "Buddika"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Matara",
                            EmployeePositionId = 2,
                            Name = "Perl"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Galle",
                            EmployeePositionId = 2,
                            Name = "Bandusiri"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Weeraketiya",
                            EmployeePositionId = 2,
                            Name = "Ranaweera"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Dickwella",
                            EmployeePositionId = 3,
                            Name = "Kumara"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Middeniya",
                            EmployeePositionId = 3,
                            Name = "Lucky"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Matara",
                            EmployeePositionId = 3,
                            Name = "Udayanga"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Matara",
                            EmployeePositionId = 4,
                            Name = "Anjana"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Matara",
                            EmployeePositionId = 4,
                            Name = "Hansika"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Matara",
                            EmployeePositionId = 4,
                            Name = "Gamage"
                        });
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.EmployeeLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HalfFullLeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLeave");
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeePosition");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Position = "Irrigation Engineer",
                            PositionCode = "IE"
                        },
                        new
                        {
                            Id = 2,
                            Position = "Engineer Assistant",
                            PositionCode = "EA"
                        },
                        new
                        {
                            Id = 3,
                            Position = "Development Officer",
                            PositionCode = "DO"
                        },
                        new
                        {
                            Id = 4,
                            Position = "Management Assistant",
                            PositionCode = "MA"
                        });
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.Employee", b =>
                {
                    b.HasOne("JqueryAjaxJson.Models.EmployeePosition", "EmployeePosition")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeePositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeePosition");
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.EmployeeLeave", b =>
                {
                    b.HasOne("JqueryAjaxJson.Models.Employee", "Employee")
                        .WithMany("EmployeeLeaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.Employee", b =>
                {
                    b.Navigation("EmployeeLeaves");
                });

            modelBuilder.Entity("JqueryAjaxJson.Models.EmployeePosition", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
